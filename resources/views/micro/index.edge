@layout('layouts/default')

@set('title', 'My Karaoke')
@set('description', '')

@section('body')
  <section x-data="source()">
    <p>Micro</p>
    <span class="media-id"></span>
    <span class="socket-id"></span>
  </section>

  <script type="module">
//     import { io } from "https://cdn.socket.io/4.3.2/socket.io.esm.min.js";
//     const socket = io()

// socket.on('connect', async () => {
//   document.querySelector('.socket-id').innerHTML = socket.id
// })

// const { RTCPeerConnection } = window
// const peerConnection = new RTCPeerConnection()

// navigator.mediaDevices.getUserMedia({ audio: true, video: false })
// .then(async mediaStream => {
//   document.querySelector('.media-id').innerHTML = mediaStream.id
//   mediaStream.getTracks().forEach(track => peerConnection.addTrack(track, mediaStream))

//   peerConnection.onicecandidate = e => {
//     if (e.candidate) { // Send the candidate to the remote peer
//       socket.emit("I am candidate", {
//         candidate: e.candidate
//       })
//     }
//   }

//   const offer = await peerConnection.createOffer()
//   await peerConnection.setLocalDescription(offer)

//   socket.emit("make-offer", {
//     offer,
//   })

//   socket.on("answer-made", async data => {
//     await peerConnection.setRemoteDescription(data.answer)
//   })
// })
// .catch(function(err) { console.log(err.name + ": " + err.message); })
    </script>
@end
